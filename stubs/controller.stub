<?php

namespace {{ namespace }};

use {{ rootNamespace }}Http\Controllers\Controller;
use Illuminate\Http\Request;
use Illuminate\Support\Facades\Storage;


class {{ class }} extends Controller
{
    protected $adminRepo ;

    public function __construct()
    {
        $this->middleware('permission:clint_types-read')->only(['index']);
        $this->middleware('permission:clint_types-create')->only(['create', 'store']);
        $this->middleware('permission:clint_types-update')->only(['edit', 'update']);
        $this->middleware('permission:clint_types-delete')->only(['destroy']);
      $this->adminRepo = $adminRepo ;

    }


      public function get_admins()
    {
        $admins = $this->adminRepo->query();
        return DataTables($admins)
        ->editColumn('created_at' , function($admin){
            return $admin->created_at->format('y-m-d');
        })
        ->addColumn('action', 'dashboard.backend.admins.actions')

        ->rawColumns(['action'])
        ->make(true);

    }

    public function index()
    {

         return view('dashboard.backend.admins.index');
    }


    public function create()
    {
         return view('dashboard.backend.admins.create');
    }


    public function store(Request $request)
    {

       $data = $request->except('img');
        if ($request->hasFile('img')) {
            $data['img'] = $request->file('img')->store('admins');
        }


        return redirect(route('admin.admins.index'))->with('success', __('models.added_successfully'));

    }


    public function show($id)
    {
        //
    }


    public function edit($id)
    {
        return view('dashboard.backend.admins.edit' , compact('admin'));

    }


    public function update(Request $request, $id)
    {
         $admin = $this->adminRepo->findOne($id);
         $data = $request->except('img' );

          if ($request->hasFile('img')) {

            Storage::delete($admin->img);

            $data['img'] = $request->file('img')->store('admins');

        } else {
            $data['img'] = $admin->img;
        }

        $admin->update($data);
        return redirect(route('admin.admins.index'))->with('success', __('models.updated_successfully'));

    }


    public function destroy($id)
    {
         $admin = $this->adminRepo->findOne($id);

        if ($admin->img) {
            Storage::delete($admin->img);
        }

        $admin->delete();
        return redirect(route('admin.admins.index'))->with('success', __('models.deleted_successfully'));

    }
}
